---
interface Props {
  isRounded: boolean;
  text: string;
}

const { isRounded = false, text = 'Button'} = Astro.props as Props;
---

<button
  class='outline-button flex flex-center'
  class:list={[isRounded ? 'rounded-full' : 'rounded-md']}
>
  <slot />
  <span>{text}</span>
</button>

<style>
  .outline-button:has(span) {
    span {
      font-size: var(--font-size-sm);
      width: 0;
      overflow: hidden;
    }
    &:hover {
      border-radius: var(--border-5);
      gap: var(--space-1);
      width: fit-content;
      span {
        opacity: 1;
        margin-left: var(--space-1);
        width: fit-content;
        animation: slideIn 0.35s linear;
      }
      &::before {
        border-radius: var(--border-5);
      }
      &::after {
        border-radius: var(--border-5);
      }
    }
  }

  @keyframes slideIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
      width: fit-content;
    }
  }

  .outline-button {
    position: relative;
    background-color: var(--color-1000);
    padding: var(--space-3);
    inline-size: fit-content;
    margin: 0;
    width: 30px;
    height: 30px;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: var(--border-3);
      border: 1px solid transparent;
      -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
      -webkit-mask-composite: destination-out;
      mask-composite: exclude;
      pointer-events: none;
      background: linear-gradient(to bottom, rgba(138, 138, 138, 0.48) 0%, rgba(255, 255, 255, 0.300) 180%); border-box;
    }

    &::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: var(--border-3);
      border: 1px solid transparent;
      -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
      -webkit-mask-composite: destination-out;
      mask-composite: exclude;
      pointer-events: none;
      background: linear-gradient(to bottom, rgba(138, 138, 138, 0.48) 0%, rgba(255, 255, 255, 0.300) 180%); border-box;
    }

  }
  .rounded-full {
    border-radius: 50%;
    &::before {
      border-radius: 50%;
    }
    &::after {
      border-radius: 50%;
    }
  }
  .rounded-md {
    border-radius: var(--border-4);
  }

  @media (480px <= width <= 1920px) {
    .outline-button {
      padding: var(--space-2);
    }
  }
</style>
