---
import Celonis from '@components/icons/Celonis.astro';
import LaLiga from '@components/icons/LaLiga.astro';
import Dixper from '@components/icons/Dixper.astro';
import Bankinter from '@components/icons/Bankinter.astro';
import { type CollectionEntry } from 'astro:content';
import Dreamfit from '@components/icons/Dreamfit.astro';
import { DREAMFIT, LALIGA, DIXPER, BANKINTER, CELONIS } from '@models/projects.model';

interface MarkerProps {
  sortedProjects: CollectionEntry<'projects'>[];
}

const { sortedProjects }: MarkerProps = Astro.props as MarkerProps;

const iconMap = {
  [CELONIS]: Celonis,
  [LALIGA]: LaLiga,
  [DIXPER]: Dixper,
  [BANKINTER]: Bankinter,
  [DREAMFIT]: Dreamfit
};
---

<ul class="markers">
  {
    sortedProjects.map((project, index) => {
      const IconComponent = iconMap[project.data.id as keyof typeof iconMap];
      return (
        <li>
          <a href={`#carousel_${index}`} style={`background: ${project.data.colors['bg-icon']}`}>
            {IconComponent && <IconComponent />}
          </a>
        </li>
      )
    })
  }
</ul>

<style>
  .markers {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    gap: var(--space-4);
    padding: var(--space-6) var(--space-3);
    width: 120px;
    a {
      animation-timeline: --carousel;
      animation-range: calc((var(--i) - 1) * 20%) calc(var(--i) * 20% + 1px);
      position: relative;
      display: flex;
      border-radius: var(--border-3);
      background: var(--colors-100);
      box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;
      padding: var(--space-2);
      width: fit-content;
      transition: transform 0.15s linear;

      &:hover::after {
        content: '';
        width: 30px;
        height: 30px;
        background: inherit;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        filter: blur(40px) saturate(400%);
        z-index: -1;
      }
      &:hover {
        transform: scale(1.05);
      }
    }
    li {
      &:nth-child(1) { --i: 1; }
      &:nth-child(2) { --i: 2; }
      &:nth-child(3) { --i: 3; }
      &:nth-child(4) { --i: 4; }
      &:nth-child(5) { --i: 5; }
    }
  }
</style>